** The one page L+ manual **
============================

== Invoking the Compiler ==
===========================

The compiler is invoked using the compile.sh command, which takes care of invoking the compiler and then, if successful, calling the Jasmin assembler.

When calling the compiler, you need to specify the L+ source code file to be compiled, for instance, if you want to compile a file called fcall.lp, you should call the compiler as:

./compile.sh fcall.lp

The Jasmin assembler requires that the original source code file (fcall.lp in our example) is found in the same directory than the generated files. If Jasmin cannot find the original source, it will abort showing an strange "invalid number" error.

The easiest way to ensure you won't run into any problems is to place your source files in the same directory where the lpc executable, lpstdlib.j, jasmin.jar and compile.bat are found, and then just call compile.sh on your file. This will create the compiler output files and automatically call the assembler, generating the bytecode to be run in the JVM.

== Java Requirements ==
=======================

Although the compiler is written in C++ and has no special software requirements, the java bytecode it generates needs a Java Virtual Machine to be run. The generated code is known to work well under the SUN JRE 1.5 supplied by default with Mac OS X Leopard.

== Tested Mac OS X Environments ==
===============================

The supplied compiler environment (in particular the lpc executable) have been tested under Mac OS X 10.5.2 (Leopard) and OS X 10.6.8 (Snow Leopard)

== L+ Syntax ==
===============

In many ways L+ is similar to C, with some extensions and some restrictions. Feel free to navigate the companion examples folder to get the gist of the general L+ syntax.

If you want to compile the given examples, remember to copy the files into the same directory where the compiler is.

== Generated Files ==
=====================

This is the list of the files generated by the compiler:

* out.txt - contains a pretty printed version of the supplied L+ source code.
* opt.txt - contains an optimized pretty printed version of the original source code.
* comp.j - contains the Jasmin JVM Assembler generated by the compiler without peephole optimizations.
* compopt.j - contains the Jasmin JVM Assembler generated by the compiler with peephole optimizations.
* Main.class - corresponds to the assembled compopt.j file into "executable" java bytecode.

You can clean up and keep your compiler directory tidy by calling the compiler.sh script with the parameter 'clean'.

== Language ==
==============

Compiler error messages are displayed in spanish. We are sorry for the inconvenience, no english error messages yet :(

== Author and Contact info ==
=============================

 *  LPC - The L+ Compiler. A compiler for a toy language similar to C.
 *  Copyright (C) 2011  Alejandro Segovia and Emilio Pombo
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.

For any questions or suggestions, you can e-mail me at asegovi at gmail dot com.
Also, make sure to stop by my website at http://alejandrosegovia.net

Have a lot of fun :)

